//Copyright (c) 2013, Steve Kemp
//All rights reserved.
//
//Redistribution and use in source and binary forms, with or without
//modification, are permitted provided that the following conditions
//are met:
//
//1. Redistributions of source code must retain the above copyright
//   notice, this list of conditions and the following disclaimer.
//2. Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the
//   documentation and/or other materials provided with the distribution.
//
//THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
//ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
//ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
//FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
//DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
//OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
//LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
//OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
//SUCH DAMAGE.
function ip2long(e,t,n,r){for(n=t=0;r=e.split(".")[t++];n+=r>>8|t>4?NaN:r*(1<<-8*t))r=parseInt(+r&&r);return n}function long2ip(e){return 1<<-1<=e&&e<4294967296&&[e>>>24,255&e>>>16,255&e>>>8,255&e].join(".")}function cidr_match(e,t){if(t.indexOf("/")<0){return e==t}var n=t.split("/");if(n.length!=2){console.log("Failed to match CIDR-range on '/'");return false}while(n[0].split(".").length<4){n[0]+=".0"}var r=0;r=32-parseInt(n[1],10);r=Math.pow(2,r);var i=ip2long(n[0]);var s=i+r;var o=ip2long(e);if(o<s&&o>=i){return true}else{return false}}